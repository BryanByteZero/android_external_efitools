EFIFILES = HelloWorld.efi LockDown.efi Loader.efi ReadVars.efi UpdateVars.efi \
	KeyTool.efi HashTool.efi PreLoader.efi SetNull.efi

EFIUNSIGNED = $(patsubst %.efi,%.unsigned.efi,$(EFIFILES))

BINARIES = cert-to-efi-sig-list sig-list-to-certs sign-efi-sig-list \
	hash-to-efi-sig-list efi-readvar efi-updatevar

export TOPDIR	:= $(shell pwd)/

include Make.rules.android

all: $(EFIFILES) $(BINARIES) $(MANPAGES) noPK.auth

lib/lib.a lib/lib-efi.a: FORCE
	$(MAKE) -C lib -f Makefile.android $(notdir $@)

lib/asn1/libasn1.a lib/asn1/libasn1-efi.a: FORCE
	$(MAKE) -C lib/asn1 -f Makefile.android $(notdir $@)

PK.pk8: $(PK_KEY_PAIR).pk8
	cp -v $^ $@

KEK.pk8: $(KEK_KEY_PAIR).pk8
	cp -v $^ $@

DB.pk8: $(DB_KEY_PAIR).pk8
	cp -v $^ $@

PK.x509.pem: $(PK_KEY_PAIR).x509.pem
	cp -v $^ $@

KEK.x509.pem: $(KEK_KEY_PAIR).x509.pem
	cp -v $^ $@

DB.x509.pem: $(DB_KEY_PAIR).x509.pem
	cp -v $^ $@

LockDown.o: PK.h KEK.h DB.h
PreLoader.o: hashlist.h

PK.h: PK.auth

KEK.h: KEK.auth

DB.h: DB.auth

noPK.esl:
	> noPK.esl

noPK.auth: noPK.esl PK.x509.pem PK.key sign-efi-sig-list
	./sign-efi-sig-list -c PK.x509.pem -k PK.key PK $< $@

PK.auth: PK.esl PK.x509.pem PK.key sign-efi-sig-list
	./sign-efi-sig-list -c PK.x509.pem -k PK.key PK $< $@

KEK.auth: KEK.esl PK.x509.pem PK.key sign-efi-sig-list
	./sign-efi-sig-list -c PK.x509.pem -k PK.key KEK $< $@

DB.auth: DB.esl KEK.x509.pem KEK.key sign-efi-sig-list
	./sign-efi-sig-list -c KEK.x509.pem -k KEK.key db $< $@

hashlist.h: HashTool.hash
	cat $^ > /tmp/tmp.hash
	xxd -i /tmp/tmp.hash > $@
	rm -f /tmp/tmp.hash


Loader.so: lib/lib-efi.a
ReadVars.so: lib/lib-efi.a lib/asn1/libasn1-efi.a
UpdateVars.so: lib/lib-efi.a
LockDown.so: lib/lib-efi.a
KeyTool.so: lib/lib-efi.a lib/asn1/libasn1-efi.a
HashTool.so: lib/lib-efi.a
PreLoader.so: lib/lib-efi.a
HelloWorld.so: lib/lib-efi.a

cert-to-efi-sig-list: cert-to-efi-sig-list.o lib/lib.a
	$(CC) $(CFLAGS) -L $(OPENSSL_LIB) -o $@ $< -lcrypto lib/lib.a

sig-list-to-certs: sig-list-to-certs.o lib/lib.a
	$(CC) $(CFLAGS) -L $(OPENSSL_LIB) -o $@ $< -lcrypto lib/lib.a

sign-efi-sig-list: sign-efi-sig-list.o lib/lib.a
	$(CC) $(CFLAGS) -L $(OPENSSL_LIB) -o $@ $< -lcrypto lib/lib.a

hash-to-efi-sig-list: hash-to-efi-sig-list.o lib/lib.a
	$(CC) $(CFLAGS) -o $@ $< lib/lib.a

efi-keytool: efi-keytool.o lib/lib.a
	$(CC) $(CFLAGS) -o $@ $< lib/lib.a

efi-readvar: efi-readvar.o lib/lib.a
	$(CC) $(CFLAGS) -L $(OPENSSL_LIB) -o $@ $< -lcrypto lib/lib.a

efi-updatevar: efi-updatevar.o lib/lib.a
	$(CC) $(CFLAGS) -L $(OPENSSL_LIB) -o $@ $< -lcrypto lib/lib.a

.PHONY : clean
clean:
	rm -f PK.* KEK.* DB.* $(EFIFILES) $(EFIUNSIGNED) $(BINARIES) *.o *.so
	rm -f doc/*.1
	$(MAKE) -C lib -f Makefile.android clean
	$(MAKE) -C lib/asn1 -f Makefile.android clean
FORCE:
